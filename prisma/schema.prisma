generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

enum UserRole{
  ADMIN
  USER
  
}

model User{
  id              String      @id @default(cuid())
  name            String?
  email           String?     @unique
  emailVerified   DateTime?
  image           String?
  password        String?
  role            UserRole  @default(USER)
  accounts        Account[]
  isTwoFactorEnabled Boolean @default(false)
  twofactorConfirmation TwoFactorConfirmation?
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken{
  id  String  @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken{
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorToken{
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation{
  id String @id @default(cuid())

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}

model CardProductStore{
  id String @id @default(cuid())
  imageId String
  name String
  cardProductStoreImage CardProductStoreImage[]
  description String?
  cardCategories CardCategories[]
  size String
  price Int
}

model CardCategories{
  id String @id @default(cuid())
  cardId String
  name String

  cardProductStore CardProductStore @relation(fields: [cardId], references: [id])

  @@unique([cardId])
}

model CardProductStoreImage{
  id String @id @default(cuid())
  cardId String
  name String
  href String

  cardProductStore CardProductStore @relation(fields: [cardId], references: [id])

  @@unique([cardId])
}